#BlueJ class context
comment0.params=initCanvas
comment0.target=Centipede(java.awt.Canvas)
comment0.text=\r\n\ the\ contructor\ allocates\ the\ board\ and\ sets\ all\ the\ spaces\ therein\ to\r\n\ zero.\r\n
comment1.params=
comment1.target=void\ addMushrooms()
comment1.text=\r\n\ addMushrooms\r\n\r\n\ adds\ mushrooms\ to\ the\ field.\ \ Each\ time\ this\ is\ called,\ more\r\n\ mushrooms\ are\ added\r\n\r\n
comment10.params=e
comment10.target=void\ mouseClicked(java.awt.event.MouseEvent)
comment11.params=e
comment11.target=void\ mouseEntered(java.awt.event.MouseEvent)
comment12.params=e
comment12.target=void\ mouseExited(java.awt.event.MouseEvent)
comment13.params=e
comment13.target=void\ mouseReleased(java.awt.event.MouseEvent)
comment14.params=
comment14.target=void\ updateDisplay()
comment14.text=\r\n\ updateDisplay\r\n\r\n\ can\ be\ called\ to\ redraw\ the\ current\ frame\ if\ something\ changes\ between\r\n\ ticks\ \r\n\r\n
comment15.params=
comment15.target=void\ run()
comment15.text=\r\n\ this\ method\ contains\ the\ main\ run\ loop\ for\ the\ game\r\n\r\n
comment16.params=args
comment16.target=void\ main(java.lang.String[])
comment16.text=\r\n\ This\ method\ creates\ a\ window\ frame\ and\ displays\ the\ Centipede\r\n\ simulation\ inside\ of\ it.\r\n
comment17.params=e
comment17.target=void\ windowClosing(java.awt.event.WindowEvent)
comment2.params=canvas
comment2.target=void\ drawMushrooms(java.awt.Graphics)
comment2.text=\r\n\ drawMushrooms\r\n\r\n\ draws\ all\ the\ mushrooms\ listed\ in\ this.shrooms\r\n\r\n\ @param\ \ canvas\ \ \ \ the\ Graphics\ object\ for\ this\ game\r\n
comment3.params=canvas\ x\ y\ laserLen
comment3.target=void\ drawShip(java.awt.Graphics,\ int,\ int,\ int)
comment3.text=\r\n\ drawShip\r\n\r\n\ draws\ the\ human\ controlled\ ship\ on\ the\ screen.\ \ If\ the\ ship\ is\ firing\ the\r\n\ laser\ is\ drawn\ as\ well\r\n\r\n\ @param\ \ canvas\ \ \ \ the\ Graphics\ object\ for\ this\ game\r\n\ @param\ \ x,y\ \ \ \ \ \ \ coordinates\ of\ the\ ship\r\n\ @param\ \ laserLen\ \ how\ far\ up\ to\ draw\ the\ laser.\ \ A\ value\ of\ zero\r\n\ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ \ indicates\ no\ laser\r\n
comment4.params=canvas
comment4.target=void\ drawFrame(java.awt.Graphics)
comment4.text=\r\n\ drawFrame\r\n\r\n\ This\ methods\ draws\ the\ current\ state\ of\ the\ simulation\ on\ a\ given\ canvas\r\n\r\n\ @param\ \ canvas\ \ \ \ the\ Graphics\ object\ for\ this\ game\r\n
comment5.params=
comment5.target=void\ updateState()
comment5.text=\r\n\ updateState\r\n\r\n\ updates\ the\ current\ state\ of\ the\ game\ for\ the\ next\ frame\r\n
comment6.params=
comment6.target=void\ fireLaser()
comment6.text=\r\n\ fireLaser\r\n\r\n\ this\ method\ updates\ the\ game\ state\ when\ the\ laser\ is\ fired\r\n
comment7.params=e
comment7.target=void\ mousePressed(java.awt.event.MouseEvent)
comment7.text=\r\n\ this\ method\ gets\ called\ whenever\ the\ user\ clicks\ the\ mouse\ button.\ \ We\r\n\ use\ this\ to\ fire\ the\ laser\r\n
comment8.params=event
comment8.target=void\ mouseMoved(java.awt.event.MouseEvent)
comment8.text=\r\n\ this\ method\ gets\ called\ whenever\ the\ user\ moves\ the\ mouse.\ \ We\ use\ this\r\n\ to\ update\ the\ position\ of\ the\ ship\r\n
comment9.params=event
comment9.target=void\ mouseDragged(java.awt.event.MouseEvent)
comment9.text=\r\n\ these\ mouse\ events\ we\ don't\ care\ about\ so\ do\ nothing\ (empty\ method)\ \r\n
numComments=18
